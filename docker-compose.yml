version: '3.9'

services:

  config-server:
    build:
      context: ../config-server    # папка с Config Server
      dockerfile: Dockerfile
    image: config-server:latest
    ports:
      - "8888:8888"
    healthcheck:
      test: ["CMD-SHELL","curl --fail http://localhost:8888/actuator/health"]
      interval: 5s
      timeout: 5s
      retries: 20

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: demo
      POSTGRES_USER: demo
      POSTGRES_PASSWORD: secret
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "demo" ]
      interval: 5s
      timeout: 3s
      retries: 10

  employee-service:
    build:
      context: .
      dockerfile: Dockerfile
    image: employee-service:latest
    ports:
      - "8081:8081"
    depends_on:
      - config-server
      - db
    environment:
      SPRING_CONFIG_IMPORT: "configserver:http://config-server:8888"
      SPRING_CLOUD_CONFIG_URI: "http://config-server:8888"

  gateway-service:
    build:
      context: ../gateway-service    # путь к вашему gateway-проекту
      dockerfile: Dockerfile
    image: gateway-service:latest
    ports:
      - "8080:8080"
    depends_on:
      - config-server
      - employee-service
    environment:
      SPRING_APPLICATION_NAME: gateway-service
      SPRING_PROFILES_ACTIVE: docker
      SPRING_CONFIG_IMPORT: configserver:http://config-server:8888
    command: >
      sh -c '
        until curl -sSf http://config-server:8888/actuator/health; do
          echo "waiting for config-server...";
          sleep 2;
        done &&
        java -jar /app.jar
      '
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:8080/actuator/health" ]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 20s

volumes:
  db-data:
